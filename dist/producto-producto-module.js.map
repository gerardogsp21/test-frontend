{"version":3,"sources":["webpack:///./src/app/producto/crear-producto/crear-producto.component.css","webpack:///./src/app/producto/crear-producto/crear-producto.component.html","webpack:///./src/app/producto/crear-producto/crear-producto.component.ts","webpack:///./src/app/producto/editar-producto/editar-producto.component.css","webpack:///./src/app/producto/editar-producto/editar-producto.component.html","webpack:///./src/app/producto/editar-producto/editar-producto.component.ts","webpack:///./src/app/producto/listar-productos/listar-productos.component.css","webpack:///./src/app/producto/listar-productos/listar-productos.component.html","webpack:///./src/app/producto/listar-productos/listar-productos.component.ts","webpack:///./src/app/producto/producto.module.ts","webpack:///./src/app/producto/producto.routing.ts","webpack:///./src/app/producto/producto.service.ts","webpack:///./src/app/producto/ver-producto/ver-producto.component.css","webpack:///./src/app/producto/ver-producto/ver-producto.component.html","webpack:///./src/app/producto/ver-producto/ver-producto.component.ts"],"names":[],"mappings":"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","file":"producto-producto-module.js","sourcesContent":["module.exports = \".producto {\\r\\n    padding: 20px;\\r\\n    background-color: #fff;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.requerido {\\r\\n    color: red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdG8vY3JlYXItcHJvZHVjdG8vY3JlYXItcHJvZHVjdG8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCx1QkFBdUI7SUFDdkIsbUJBQW1CO0NBQ3RCOztBQUVEO0lBQ0ksV0FBVztDQUNkIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdG8vY3JlYXItcHJvZHVjdG8vY3JlYXItcHJvZHVjdG8uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9kdWN0byB7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuLnJlcXVlcmlkbyB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"producto\\\">\\n  <div *ngIf=\\\"errores?.length > 0\\\">\\n      <ngb-alert *ngFor=\\\"let error of errores\\\" type=\\\"danger\\\" (close)=\\\"closeAlert(error)\\\">{{ error }}</ngb-alert>\\n  </div>\\n\\n  <div *ngIf=\\\"respuesta.status\\\">\\n      <ngb-alert type=\\\"success\\\" [dismissible]=\\\"false\\\">{{respuesta.msg}}</ngb-alert>\\n  </div>\\n  \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && registrarProducto()\\\" #f=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"nombre\\\">Nombre<span class=\\\"requerido\\\">*</span></label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nombre\\\" \\n                        [(ngModel)]=\\\"producto.nombre\\\" #nombre=\\\"ngModel\\\" pattern=\\\"[A-Za-z ]+\\\" maxlength=\\\"100\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': f.submitted && nombre.invalid }\\\" required />\\n                  <div *ngIf=\\\"f.submitted && nombre.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"nombre.errors.required\\\">El nombre es requerido</div>\\n                      <div *ngIf=\\\"nombre.errors.pattern\\\">El nombre contiene formato incorrecto</div>\\n                      <div *ngIf=\\\"nombre.errors.maxlength\\\">El nombre no puede sobrepasar los 100 caracteres</div>\\n                  </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"talla\\\">Talla<span class=\\\"requerido\\\">*</span></label>\\n                  <select class=\\\"form-control\\\" name=\\\"talla\\\" [(ngModel)]=\\\"producto.talla\\\" #talla=\\\"ngModel\\\" \\n                     [ngClass]=\\\"{ 'is-invalid': f.submitted && talla.invalid }\\\" required >\\n                    <option value=\\\"S\\\">S</option>\\n                    <option value=\\\"M\\\">M</option>\\n                    <option value=\\\"L\\\">L</option>\\n                  </select>\\n                  <div *ngIf=\\\"f.submitted && talla.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"talla.errors.required\\\">La talla es requerida</div>\\n                  </div>\\n                </div>  \\n            </div>\\n\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"marca_id\\\">Marcas<span class=\\\"requerido\\\">*</span></label>\\n                  <select class=\\\"form-control\\\" name=\\\"marca_id\\\" [(ngModel)]=\\\"producto.marca_id\\\" #marca_id=\\\"ngModel\\\" \\n                    [ngClass]=\\\"{ 'is-invalid': f.submitted && marca_id.invalid }\\\" required >\\n                    <option [value]=\\\"item?.id\\\" *ngFor=\\\"let item of marcas\\\">{{item.nombre}} - {{item.referencia}}</option>\\n                  </select>\\n                  <div *ngIf=\\\"f.submitted && marca_id.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"marca_id.errors.required\\\">La marca es requerida</div>\\n                  </div>\\n                </div>  \\n            </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6\\\">\\n              <div class=\\\"form-group\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"fecha_embarque\\\">Fecha de embarque<span class=\\\"requerido\\\">*</span></label>\\n                      <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"fecha_embarque\\\" \\n                            [(ngModel)]=\\\"producto.fecha_embarque\\\" #fecha_embarque=\\\"ngModel\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': f.submitted && fecha_embarque.invalid }\\\" required />\\n                      <div *ngIf=\\\"f.submitted && fecha_embarque.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"fecha_embarque.errors.required\\\">La fecha de embarque es requerida</div>\\n                      </div>\\n                  </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-6\\\">\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"cantidad_inventario\\\">Cantidad<span class=\\\"requerido\\\">*</span></label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"cantidad_inventario\\\" \\n                        [(ngModel)]=\\\"producto.cantidad_inventario\\\" #cantidad_inventario=\\\"ngModel\\\" pattern=\\\"[0-9]+\\\" maxlength=\\\"10\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': f.submitted && cantidad_inventario.invalid }\\\" required />\\n                  <div *ngIf=\\\"f.submitted && cantidad_inventario.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"cantidad_inventario.errors.required\\\">La cantidad es requerida</div>\\n                      <div *ngIf=\\\"cantidad_inventario.errors.pattern\\\">Debe ser un valor numerico entero</div>\\n                      <div *ngIf=\\\"cantidad_inventario.errors.maxlength\\\">El cantidad no puede sobrepasar los 10 digitos</div>\\n                  </div>\\n              </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"observaciones\\\">Observaciones<span class=\\\"requerido\\\">*</span></label>\\n                  <textarea type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"observaciones\\\" \\n                        [(ngModel)]=\\\"producto.observaciones\\\" #observaciones=\\\"ngModel\\\" maxlength=\\\"200\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': f.submitted && observaciones.invalid }\\\" required ></textarea>\\n                  <div *ngIf=\\\"f.submitted && observaciones.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"observaciones.errors.required\\\">El observaciones es requerido</div>\\n                      <div *ngIf=\\\"observaciones.errors.maxlength\\\">El observaciones no puede sobrepasar los 200 caracteres</div>\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n        <br>\\n  \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6\\\">\\n              <a class=\\\"btn btn-outline-dark btn-sm\\\" routerLink=\\\"/producto/listado\\\">\\n                <i class=\\\"mdi mdi-arrow-left-bold\\\"></i> Regresar\\n              </a>\\n            </div>\\n  \\n            <div class=\\\"col-sm-6\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\">Registrar</button>\\n            </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Input, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ProductoService } from '../producto.service';\n\n@Component({\n  selector: 'app-crear-producto',\n  templateUrl: './crear-producto.component.html',\n  styleUrls: ['./crear-producto.component.css'],\n  providers: [ProductoService]\n})\nexport class CrearProductoComponent implements OnInit {\n\n  public marcas: any = [];\n  public errores: any = [];\n  public respuesta: any = {};\n  public producto: any = {\n    nombre: null,\n    talla: null,\n    observaciones: null,\n    marca_id: null,\n    marca: {\n      id: null,\n      nombre: null\n    },\n    cantidad_inventario: null,\n    fecha_embarque: null,\n  };\n  constructor(private productoService: ProductoService, \n              private router: Router) { }\n\n  ngOnInit() {\n    this.cargarMarcas();\n  }\n\n  cargarMarcas() {\n    this.productoService.getMarcas().subscribe(\n      (datos: any) => {\n          this.marcas = datos.data;\n      },\n      error => console.log(<any>error)\n    );\n  }\n  \n  registrarProducto() {\n    const that = this;\n    let keys: String[];\n    this.errores = [];\n    this.productoService.postProducto(this.producto).subscribe(\n      (datos: any) => {\n        if (!datos.status) {\n          keys = Object.keys(datos.validator);\n          keys.forEach(item => {\n              this.errores.push(datos.validator['' + item]);\n          });\n        } else {\n          this.respuesta = datos;\n          setTimeout(function() {\n            that.router.navigate(['/producto/listado']);\n          }, 1000);\n        }\n      },\n      error => console.log(<any>error)\n    );\n  }\n  \n  public closeAlert(error) {\n    this.errores.splice(this.errores.indexOf(error), 1);\n  }\n}\n","module.exports = \".producto {\\r\\n    padding: 20px;\\r\\n    background-color: #fff;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.requerido {\\r\\n    color: red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdG8vZWRpdGFyLXByb2R1Y3RvL2VkaXRhci1wcm9kdWN0by5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLHVCQUF1QjtJQUN2QixtQkFBbUI7Q0FDdEI7O0FBRUQ7SUFDSSxXQUFXO0NBQ2QiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0by9lZGl0YXItcHJvZHVjdG8vZWRpdGFyLXByb2R1Y3RvLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucHJvZHVjdG8ge1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbi5yZXF1ZXJpZG8ge1xyXG4gICAgY29sb3I6IHJlZDtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"producto\\\">\\n  <div *ngIf=\\\"errores?.length > 0\\\">\\n      <ngb-alert *ngFor=\\\"let error of errores\\\" type=\\\"danger\\\" (close)=\\\"closeAlert(error)\\\">{{ error }}</ngb-alert>\\n  </div>\\n\\n  <div *ngIf=\\\"respuesta.status\\\">\\n      <ngb-alert type=\\\"success\\\" [dismissible]=\\\"false\\\">{{respuesta.msg}}</ngb-alert>\\n  </div>\\n  \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && actualizarProducto()\\\" #f=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4\\\">\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"nombre\\\">Nombre<span class=\\\"requerido\\\">*</span></label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"nombre\\\" \\n                        [(ngModel)]=\\\"producto.nombre\\\" #nombre=\\\"ngModel\\\" pattern=\\\"[A-Za-z ]+\\\" maxlength=\\\"100\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': f.submitted && nombre.invalid }\\\" required />\\n                  <div *ngIf=\\\"f.submitted && nombre.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"nombre.errors.required\\\">El nombre es requerido</div>\\n                      <div *ngIf=\\\"nombre.errors.pattern\\\">El nombre contiene formato incorrecto</div>\\n                      <div *ngIf=\\\"nombre.errors.maxlength\\\">El nombre no puede sobrepasar los 100 caracteres</div>\\n                  </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"talla\\\">Talla<span class=\\\"requerido\\\">*</span></label>\\n                  <select class=\\\"form-control\\\" name=\\\"talla\\\" [(ngModel)]=\\\"producto.talla\\\">\\n                    <option value=\\\"S\\\">S</option>\\n                    <option value=\\\"M\\\">M</option>\\n                    <option value=\\\"L\\\">L</option>\\n                  </select>\\n                </div>  \\n            </div>\\n\\n            <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"talla\\\">Marcas<span class=\\\"requerido\\\">*</span></label>\\n                  <select class=\\\"form-control\\\" name=\\\"marca_id\\\" [(ngModel)]=\\\"producto.marca_id\\\">\\n                    <option [value]=\\\"item?.id\\\" *ngFor=\\\"let item of marcas\\\">{{item.nombre}} - {{item.referencia}}</option>\\n                  </select>\\n                </div>  \\n            </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6\\\">\\n              <div class=\\\"form-group\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"fecha_embarque\\\">Fecha de embarque<span class=\\\"requerido\\\">*</span></label>\\n                      <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"fecha_embarque\\\" \\n                            [(ngModel)]=\\\"producto.fecha_embarque\\\" #fecha_embarque=\\\"ngModel\\\"\\n                            [ngClass]=\\\"{ 'is-invalid': f.submitted && fecha_embarque.invalid }\\\" required />\\n                      <div *ngIf=\\\"f.submitted && fecha_embarque.invalid\\\" class=\\\"invalid-feedback\\\">\\n                          <div *ngIf=\\\"fecha_embarque.errors.required\\\">La fecha de embarque es requerida</div>\\n                      </div>\\n                  </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-6\\\">\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"cantidad_inventario\\\">Cantidad<span class=\\\"requerido\\\">*</span></label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"cantidad_inventario\\\" \\n                        [(ngModel)]=\\\"producto.cantidad_inventario\\\" #cantidad_inventario=\\\"ngModel\\\" pattern=\\\"[0-9]+\\\" maxlength=\\\"10\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': f.submitted && cantidad_inventario.invalid }\\\" required />\\n                  <div *ngIf=\\\"f.submitted && cantidad_inventario.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"cantidad_inventario.errors.required\\\">La cantidad es requerida</div>\\n                      <div *ngIf=\\\"cantidad_inventario.errors.pattern\\\">Debe ser un valor numerico entero</div>\\n                      <div *ngIf=\\\"cantidad_inventario.errors.maxlength\\\">El cantidad no puede sobrepasar los 10 digitos</div>\\n                  </div>\\n              </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"observaciones\\\">Observaciones<span class=\\\"requerido\\\">*</span></label>\\n                  <textarea type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"observaciones\\\" \\n                        [(ngModel)]=\\\"producto.observaciones\\\" #observaciones=\\\"ngModel\\\" maxlength=\\\"200\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': f.submitted && observaciones.invalid }\\\" required ></textarea>\\n                  <div *ngIf=\\\"f.submitted && observaciones.invalid\\\" class=\\\"invalid-feedback\\\">\\n                      <div *ngIf=\\\"observaciones.errors.required\\\">El observaciones es requerido</div>\\n                      <div *ngIf=\\\"observaciones.errors.maxlength\\\">El observaciones no puede sobrepasar los 200 caracteres</div>\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n        <br>\\n  \\n        <div class=\\\"row\\\">\\n            \\n            <div class=\\\"col-sm-6\\\">\\n              <a class=\\\"btn btn-outline-dark btn-sm\\\" routerLink=\\\"/producto/listado\\\">\\n                <i class=\\\"mdi mdi-arrow-left-bold\\\"></i> Regresar\\n              </a>\\n            </div>\\n  \\n            <div class=\\\"col-sm-6\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\">Actualizar</button>\\n            </div>\\n  \\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Input, Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { ProductoService } from '../producto.service';\n\n@Component({\n  selector: 'app-editar-producto',\n  templateUrl: './editar-producto.component.html',\n  styleUrls: ['./editar-producto.component.css'],\n  providers: [ProductoService]\n})\nexport class EditarProductoComponent implements OnInit {\n\n  public marcas: any = [];\n  public errores: any = [];\n  public respuesta: any = {};\n  public producto: any = {\n    id: null,\n    nombre: null,\n    talla: null,\n    observaciones: null,\n    marca_id: null,\n    marca: {\n      id: null,\n      nombre: null\n    },\n    cantidad_inventario: null,\n    fecha_embarque: null,\n  };\n  constructor(private productoService: ProductoService, \n              private router: Router, \n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      params => this.producto.id = params['id']\n    );\n    this.cargarProducto();\n    this.cargarMarcas();\n  }\n\n  cargarProducto() {\n    this.productoService.getProducto(this.producto.id).subscribe(\n      (datos: any) => {\n          this.producto = datos.data;\n      },\n      error => console.log(<any>error)\n    );\n  }\n\n  cargarMarcas() {\n    this.productoService.getMarcas().subscribe(\n      (datos: any) => {\n          this.marcas = datos.data;\n      },\n      error => console.log(<any>error)\n    );\n  }\n  \n  actualizarProducto() {\n    const that = this;\n    let keys: String[];\n    this.errores = [];\n    this.productoService.putProducto(this.producto).subscribe(\n      (datos: any) => {\n        if (!datos.status) {\n          keys = Object.keys(datos.validator);\n          keys.forEach(item => {\n              this.errores.push(datos.validator['' + item]);\n          });\n        } else {\n          this.respuesta = datos;\n          setTimeout(function() {\n            that.router.navigate(['/producto/listado']);\n          }, 2000);\n        }\n      },\n      error => console.log(<any>error)\n    );\n  }\n  \n  public closeAlert(error) {\n    this.errores.splice(this.errores.indexOf(error), 1);\n  }\n}\n","module.exports = \".listado {\\r\\n    padding: 20px;\\r\\n    background-color: #fff;\\r\\n    border-radius: 1px;\\r\\n}\\r\\n\\r\\n.agregar-producto {\\r\\n    text-align: end;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.sep {\\r\\n    margin-right: 2px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdG8vbGlzdGFyLXByb2R1Y3Rvcy9saXN0YXItcHJvZHVjdG9zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtDQUN0Qjs7QUFFRDtJQUNJLGdCQUFnQjtJQUNoQixvQkFBb0I7Q0FDdkI7O0FBRUQ7SUFDSSxrQkFBa0I7Q0FDckIiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0by9saXN0YXItcHJvZHVjdG9zL2xpc3Rhci1wcm9kdWN0b3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5saXN0YWRvIHtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMXB4O1xyXG59XHJcblxyXG4uYWdyZWdhci1wcm9kdWN0byB7XHJcbiAgICB0ZXh0LWFsaWduOiBlbmQ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcblxyXG4uc2VwIHtcclxuICAgIG1hcmdpbi1yaWdodDogMnB4O1xyXG59Il19 */\"","module.exports = \"\\n<div class=\\\"listado\\\">\\n  <div *ngIf=\\\"respuesta?.type\\\">\\n      <ngb-alert [type]=\\\"respuesta.type\\\" [dismissible]=\\\"false\\\">{{ respuesta?.msg }}</ngb-alert>\\n  </div>\\n\\n  <div class=\\\"agregar-producto\\\">\\n    <a class=\\\"btn btn-outline-dark btn-sm\\\" routerLink=\\\"/producto/crear\\\">\\n      <i class=\\\"mdi mdi-plus\\\"></i> Agregar producto\\n    </a>\\n  </div>\\n\\n  <div class=\\\"table-responsive\\\">\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <th>Nombre</th>\\n        <th>Talla</th>\\n        <th>Obervaciones</th>\\n        <th>Marca</th>\\n        <th>Cantidad en inventario</th>\\n        <th>Fecha inventario</th>\\n        <th>Acciones</th>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of productos.data; let i = index\\\">\\n          <td>{{item?.nombre}}</td>\\n          <td>{{item?.talla}}</td>\\n          <td>{{item?.observaciones}}</td>\\n          <td>{{item?.marca.nombre}}</td>\\n          <td>{{item?.cantidad_inventario}}</td>\\n          <td>{{item?.fecha_embarque}}</td>\\n          <td>\\n            <!-- <a class=\\\"btn btn-outline-dark\\\" placement=\\\"top\\\" ngbTooltip=\\\"Eliminar\\\"><i class=\\\"mdi mdi-delete-forever\\\"></i></a> -->\\n            <a class=\\\"btn btn-outline-dark btn-sm sep\\\" routerLink=\\\"/producto/detalle/{{item?.id}}\\\">Ver</a>\\n            <a class=\\\"btn btn-outline-dark btn-sm sep\\\" routerLink=\\\"/producto/editar/{{item?.id}}\\\">Editar</a>\\n            <div class=\\\"btn-group\\\" ngbDropdown role=\\\"group\\\" aria-label=\\\"Eliminar\\\">\\n                <button class=\\\"btn btn-outline-danger btn-sm\\\" ngbDropdownToggle>Eliminar</button>\\n                <div class=\\\"dropdown-menu\\\" ngbDropdownMenu>\\n                  <button class=\\\"dropdown-item\\\" (click)=\\\"eliminarProducto(item?.id, i)\\\">Click para confirmar</button>\\n                </div>\\n              </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n  \\n  <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-xs btn-primary\\\" (click)=\\\"changePage(productos?.prev_page_url)\\\" \\n              *ngIf=\\\"productos?.prev_page_url\\\">\\n        <span class=\\\"fa fa-angle-left\\\"></span>\\n      </button>\\n            Página {{productos?.current_page}} / {{productos?.last_page}}\\n      <button class=\\\"btn btn-xs btn-primary\\\" (click)=\\\"changePage(productos?.next_page_url)\\\" \\n              *ngIf=\\\"productos?.next_page_url\\\">\\n        <span class=\\\"fa fa-angle-right\\\"></span>\\n      </button>\\n  </div>\\n</div>\\n\\n\"","\nimport { Input, Component, OnInit } from '@angular/core';\n\nimport { ProductoService } from '../producto.service';\n\n@Component({\n  selector: 'app-listar-productos',\n  templateUrl: './listar-productos.component.html',\n  styleUrls: ['./listar-productos.component.css'],\n  providers: [ProductoService]\n})\nexport class ListarProductosComponent implements OnInit {\n  \n  public productos = { data: [] };\n  public respuesta: any = {type: null, msg: ''};\n\n  constructor(private productoService: ProductoService) { }\n\n  ngOnInit() {\n    this.cargarProductos();\n  }\n\n  cargarProductos() {\n    this.productoService.getProductoPaginado().subscribe(\n      (datos: any) => {\n          this.productos = datos.data;\n      },\n      error => console.log(<any>error)\n    );\n  }\n  \n  eliminarProducto(producto_id, index) {\n    const that = this;\n    this.productoService.deleteProducto(producto_id).subscribe(\n      (datos: any) => {\n        this.respuesta = datos;\n        this.respuesta.type = 'danger';\n        if (datos.status) {\n          this.respuesta.type = 'success';\n          this.productos.data.splice(index, 1);\n        }\n        setTimeout(function(){\n          that.respuesta = {type: null, msg: ''};\n        }, 1000);\n      },\n      error => console.log(<any>error)\n    );\n  }\n\n  changePage(url) {\n    this.productoService.changePage(url).subscribe(\n      (datos: any) => {\n          this.productos = datos.data;\n      },\n      error => console.log(<any>error)\n    );\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JsonpModule } from '@angular/http';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ProductoRoutes } from './producto.routing';\n\nimport { ListarProductosComponent } from './listar-productos/listar-productos.component';\nimport { CrearProductoComponent } from './crear-producto/crear-producto.component';\nimport { EditarProductoComponent } from './editar-producto/editar-producto.component';\nimport { VerProductoComponent } from './ver-producto/ver-producto.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ProductoRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    JsonpModule,\n    NgbModule\n  ],\n  declarations: [\n  ListarProductosComponent,\n  CrearProductoComponent,\n  EditarProductoComponent,\n  VerProductoComponent]\n})\nexport class ProductoModule {}\n","import { Routes } from '@angular/router';\n\n\nimport { ListarProductosComponent } from './listar-productos/listar-productos.component';\nimport { CrearProductoComponent } from './crear-producto/crear-producto.component';\nimport { EditarProductoComponent } from './editar-producto/editar-producto.component';\nimport { VerProductoComponent } from './ver-producto/ver-producto.component';\n\n\nexport const ProductoRoutes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'listado',\n        component: ListarProductosComponent,\n        data: {\n          title: 'Productos',\n          urls: [\n            { title: 'Productos', url: '/producto/listado' }\n          ]\n        }\n      },\n      {\n        path: 'crear',\n        component: CrearProductoComponent,\n        data: {\n          title: 'Productos',\n          urls: [\n            { title: 'Productos', url: '/producto/listado' },\n            { title: 'Registrar producto'}\n          ]\n        }\n      },\n      {\n        path: 'editar/:id',\n        component: EditarProductoComponent,\n        data: {\n          title: 'Productos',\n          urls: [\n            { title: 'Productos', url: '/producto/listado' },\n            { title: 'Editar producto'}\n          ]\n        }\n      },\n      {\n        path: 'detalle/:id',\n        component: VerProductoComponent,\n        data: {\n          title: 'Productos',\n          urls: [\n            { title: 'Productos', url: '/producto/listado' },\n            { title: 'Detalle'}\n          ]\n        }\n      }\n    ]\n  }\n];\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class ProductoService {\r\n\r\n    base_url = !environment.production ? environment.base_url_local : environment.base_url_public;\r\n\r\n    headers = new HttpHeaders();\r\n\r\n    constructor(private http: HttpClient) { };\r\n    \r\n    getProductoPaginado(): Observable<any>  {\r\n        return this.http.get(this.base_url + 'productos/listar/paginado');\r\n    }\r\n\r\n    changePage(url: string): Observable<any> {\r\n        return this.http.get(url);\r\n    }\r\n\r\n    getProductos(): Observable<any>  {\r\n        return this.http.get(this.base_url + 'productos');\r\n    }\r\n\r\n    getProducto(producto_id): Observable<any>  {\r\n        return this.http.get(this.base_url + 'productos/' + producto_id);\r\n    }\r\n\r\n    postProducto(datos: any) {\r\n        return this.http.post(this.base_url + 'productos', datos);\r\n    }\r\n\r\n    putProducto(datos: any) {\r\n        return this.http.put(this.base_url + 'productos/' + datos.id, datos);\r\n    }\r\n\r\n    deleteProducto(producto_id: any) {\r\n        return this.http.delete(this.base_url + 'productos/' + producto_id);\r\n    }\r\n\r\n    getMarcas(): Observable<any>  {\r\n        return this.http.get(this.base_url + 'marcas');\r\n    }\r\n}\r\n","module.exports = \".producto {\\r\\n    padding: 20px;\\r\\n    background-color: #fff;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdG8vdmVyLXByb2R1Y3RvL3Zlci1wcm9kdWN0by5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLHVCQUF1QjtJQUN2QixtQkFBbUI7Q0FDdEIiLCJmaWxlIjoic3JjL2FwcC9wcm9kdWN0by92ZXItcHJvZHVjdG8vdmVyLXByb2R1Y3RvLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucHJvZHVjdG8ge1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"producto\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-2\\\"></div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-4\\\"><b>Nombre</b>:</div>\\n        <div class=\\\"col-sm-8\\\">{{producto?.nombre}}</div>\\n      </div>\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\"><b>Talla</b>:</div>\\n          <div class=\\\"col-sm-8\\\">{{producto?.talla}}</div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-4\\\"><b>Observaciones</b>:</div>\\n        <div class=\\\"col-sm-8\\\">{{producto?.observaciones}}</div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-4\\\"><b>Marca</b>:</div>\\n        <div class=\\\"col-sm-8\\\">\\n          <a  routerLink=\\\"/marca/detalle/{{producto.marca?.id}}\\\">{{producto.marca?.nombre}}</a>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-4\\\"><b>Cantidad en inventario</b>:</div>\\n        <div class=\\\"col-sm-8\\\">{{producto?.cantidad_inventario}}</div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-4\\\"><b>Fecha de embarque</b>:</div>\\n        <div class=\\\"col-sm-8\\\">{{producto?.fecha_embarque}}</div>\\n      </div>\\n      \\n      <br>\\n  \\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-6\\\">\\n            <a class=\\\"btn btn-outline-dark btn-sm\\\" routerLink=\\\"/producto/listado\\\">\\n              <i class=\\\"mdi mdi-arrow-left-bold\\\"></i> Regresar\\n            </a>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Input, Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { ProductoService } from '../producto.service';\n\n@Component({\n  selector: 'app-ver-producto',\n  templateUrl: './ver-producto.component.html',\n  styleUrls: ['./ver-producto.component.css'],\n  providers: [ProductoService]\n})\nexport class VerProductoComponent implements OnInit {\n  public producto: any = {\n    id: null,\n    nombre: null,\n    talla: null,\n    observaciones: null,\n    marca_id: null,\n    marca: {\n      id: null,\n      nombre: null\n    },\n    cantidad_inventario: null,\n    fecha_embarque: null,\n  };\n  constructor(private productoService: ProductoService, \n              private router: Router, \n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(\n      params => this.producto.id = params['id']\n    );\n    this.cargarProducto();\n  }\n\n  cargarProducto() {\n    this.productoService.getProducto(this.producto.id).subscribe(\n      (datos: any) => {\n          this.producto = datos.data;\n      },\n      error => console.log(<any>error)\n    );\n  }\n\n}\n"],"sourceRoot":""}